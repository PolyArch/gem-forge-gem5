
'X86ISA::TwoByteOpcode': decode OPCODE_OP_TOP5 {
    format Inst{
        0x02: decode LEGACY_DECODEVAL {
            0x0: decode OPCODE_OP_BOTTOM3 {
                0x0: decode EVEX_L_EXTEND {
                    0x2: VMOVUPS(VZqo, WZqo);
                    0x1: VMOVUPS(VYdo, WYdo);
                    0x0: VMOVUPS(Vo, Wo);
                }
                0x1: decode EVEX_L_EXTEND {
                    0x2: VMOVUPS(WZqo, VZqo);
                    0x1: VMOVUPS(WYdo, VYdo);
                    0x0: VMOVUPS(Wo, Vo);
                }
            }
        }
        0x05: decode LEGACY_DECODEVAL {
            // no prefix
            0x0: decode OPCODE_OP_BOTTOM3 {
                0x0: decode EVEX_L_EXTEND {
                    0x2: VMOVAPS(VZqo, WZqo);
                    0x1: VMOVAPS(VYdo, WYdo);
                    0x0: VMOVAPS(Vo, Wo);
                }
                0x1: decode EVEX_L_EXTEND {
                    0x2: VMOVAPS(WZqo, VZqo);
                    0x1: VMOVAPS(WYdo, VYdo);
                    0x0: VMOVAPS(Wo, Vo);
                }
            }
        }
        0x0D: decode LEGACY_DECODEVAL {
            // no prefix
            0x0: UD2();
            // repe (0xF3)
            0x4: decode OPCODE_OP_BOTTOM3 {
                0x7: decode EVEX_L_EXTEND {
                    0x2: VMOVDQU(VZqo, WZqo);
                    0x1: VMOVDQU(VYdo, WYdo);
                    0x0: VMOVDQU(Vq, Wq);
                }
                default: UD2();
            }
            // operand size (0x66)
            0x1: decode OPCODE_OP_BOTTOM3 {
                0x7: decode EVEX_L_EXTEND {
                    0x2: VMOVDQA(VZqo, WZqo);
                    0x1: VMOVDQA(VYdo, WYdo);
                    0x0: VMOVDQA(Vo, Wo);
                }
                default: UD2();
            }
        }
        0x0F: decode LEGACY_DECODEVAL {
            0x0: UD2();
            0x4: decode OPCODE_OP_BOTTOM3 {
                0x7: decode EVEX_L_EXTEND {
                    0x2: VMOVDQU(WZqo, VZqo);
                    0x1: VMOVDQU(WYdo, VYdo);
                    0x0: VMOVDQU(Wo, Vo);
                }
                default: UD2();
            }
            0x1: decode OPCODE_OP_BOTTOM3 {
                0x7: decode EVEX_L_EXTEND {
                    0x2: VMOVDQA(WZqo, VZqo);
                    0x1: VMOVDQA(WYdo, VYdo);
                    0x0: VMOVDQA(Wo, Vo);
                }
                default: UD2();
            }
        }
        0x1A: decode LEGACY_DECODEVAL {
            // operand size (0x66)
            0x1: decode OPCODE_OP_BOTTOM3 {
                0x4: decode EVEX_L_EXTEND {
                    0x2: VPADDQ(VZqo, WZqo);
                }
                default: UD2();
            }
        }
    }
}